(()=>{"use strict";var t={d:(e,o)=>{for(var n in o)t.o(o,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:o[n]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};t.d({},{L:()=>p});class e{constructor(t){this.idprojecto=(new Date).getTime(),this.projecto=t,this.taskList=[]}newTask(t){this.taskList.push(t)}}class o{constructor(t){this.id=(new Date).getTime(),this.tarea=t,this.date=new Date,this.completed=!1}}const n=document.querySelector("#new-project"),s=(document.querySelector(".container-projects"),document.querySelector(".input-project")),a=document.querySelector(".todo-list"),i=document.querySelector("#new-task"),c=document.querySelector(".input-task"),d=document.querySelector(".containerlist");let r="";c.disabled=!0;const l=t=>{const e=`\n    <li class="${t.completed?"completed":""}" data-id="${t.id}">\n        <div class="view">\n            <input class="toggle" type="checkbox" ${t.completed?"checked":""}>\n            <label>${t.tarea} <span>${t.date}</span></label>\n            <button class="destroy"></button>\n        </div>\n    </li>\n    `,o=document.createElement("div");return o.innerHTML=e,a.append(o.firstElementChild),o.firstElementChild};n.addEventListener("click",(()=>{const t=new e(s.value);""!=s.value&&(p.newTodo(t),(t=>{const e=`\n    <div class="project" data-id="${t.idprojecto}">\n          <p>${t.projecto}</p>\n    </div>\n    `,o=document.createElement("div");o.innerHTML=e,d.appendChild(o)})(t),s.value="")})),d.addEventListener("click",(t=>{a.innerHTML="",c.disabled=!1;const e=t.target.parentElement.getAttribute("data-id");r=e,p.findTaskLength(r)>0&&p.findTask(r).forEach((t=>{l(t)}))})),i.addEventListener("click",(()=>{const t=new o(c.value);""!=c.value&&(p.addTask(r,t),l(t),c.value="")})),a.addEventListener("click",(t=>{const e=t.target.parentElement.parentElement.getAttribute("data-id"),o=t.target.parentElement.parentElement;"input"==t.target.localName&&(p.taskCompleted(r,e),o.classList.toggle("completed")),"button"==t.target.localName&&(p.deleteTask(r,e),a.removeChild(o))}));const p=new class{constructor(){this.todo=[]}newTodo(t){this.todo.push(t)}addTask(t,e){for(const o of this.todo)o.idprojecto==t&&o.taskList.push(e)}findTask(t){for(const e of this.todo)if(e.idprojecto==t)return e.taskList}findTaskLength(t){for(const e of this.todo)if(e.idprojecto==t)return e.taskList.length}taskCompleted(t,e){for(const o of this.todo)if(o.idprojecto==t)for(const t of o.taskList)t.id==e&&(t.completed=!t.completed)}deleteTask(t,e){for(const o of this.todo)o.idprojecto==t&&(o.taskList=o.taskList.filter((t=>t.id!=e)))}}})();